{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Which Neighborhoods in Pittsburgh have the best trees?\n",
    "<b>by Camille Larson\n",
    "\n",
    "<b>When starting this project, I wanted to focus on a more enviornmental aspect of the trees. I chose to talk about trees because trees are very important to air quality, but they are also important on a visual level too. I chose to create a metric more about the conditions of the overall trees in a neighborhood rather than total trees. Personally, I believe a few, excellent trees is better than hundreds of dead trees. For this, I used a dataset caled \"City of Pittsburgh trees\". The trees in this dataset are \"cared for and managed by the City of Pittsburgh Department of Public Works Forestry Division.\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import collections\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Below is a sample of the data. As you can see, there are many different aspects collected about each tree, from common name to the growth space length. I wanted to focus specificially on condition of the tree and the neighborhood it is located in."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#load trees directly from WRPD- City of Pittsburgh Trees\n",
    "trees = pd.read_csv(\"https://data.wprdc.org/datastore/dump/1515a93c-73e3-4425-9b35-1cd11b2196da\", dtype = 'object')\n",
    "trees.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Because I want to focus on condition and neighborhood location, I just took the condition column and neighborhood column from the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>condition</th>\n",
       "      <th>neighborhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Homewood North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Oakwood</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Fair</td>\n",
       "      <td>South Side Flats</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Fair</td>\n",
       "      <td>East Allegheny</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Good</td>\n",
       "      <td>Highland Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45704</th>\n",
       "      <td>Poor</td>\n",
       "      <td>Point Breeze North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45705</th>\n",
       "      <td>Good</td>\n",
       "      <td>Squirrel Hill North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45706</th>\n",
       "      <td>Good</td>\n",
       "      <td>Squirrel Hill North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45707</th>\n",
       "      <td>Good</td>\n",
       "      <td>Squirrel Hill North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45708</th>\n",
       "      <td>Good</td>\n",
       "      <td>Squirrel Hill North</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>45709 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      condition         neighborhood\n",
       "0           NaN       Homewood North\n",
       "1           NaN              Oakwood\n",
       "2          Fair     South Side Flats\n",
       "3          Fair       East Allegheny\n",
       "4          Good        Highland Park\n",
       "...         ...                  ...\n",
       "45704      Poor   Point Breeze North\n",
       "45705      Good  Squirrel Hill North\n",
       "45706      Good  Squirrel Hill North\n",
       "45707      Good  Squirrel Hill North\n",
       "45708      Good  Squirrel Hill North\n",
       "\n",
       "[45709 rows x 2 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Just need condition and neighborhood\n",
    "new = trees.iloc[0:, [14, 48]]\n",
    "new"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>In order to best get the overall tree conditions in a neighborhood, I replaced the condition type with a number from 0-6. 0 is excellent and 6 is dead. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>condition</th>\n",
       "      <th>neighborhood</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19285</th>\n",
       "      <td>0.0</td>\n",
       "      <td>Highland Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19296</th>\n",
       "      <td>0.0</td>\n",
       "      <td>Highland Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16430</th>\n",
       "      <td>0.0</td>\n",
       "      <td>Swisshelm Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16442</th>\n",
       "      <td>0.0</td>\n",
       "      <td>Swisshelm Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16453</th>\n",
       "      <td>0.0</td>\n",
       "      <td>Stanton Heights</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30601</th>\n",
       "      <td>6.0</td>\n",
       "      <td>Stanton Heights</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30600</th>\n",
       "      <td>6.0</td>\n",
       "      <td>Crafton Heights</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30599</th>\n",
       "      <td>6.0</td>\n",
       "      <td>Perry North</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30595</th>\n",
       "      <td>6.0</td>\n",
       "      <td>Beechview</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32959</th>\n",
       "      <td>6.0</td>\n",
       "      <td>Squirrel Hill South</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>39965 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       condition         neighborhood\n",
       "19285        0.0        Highland Park\n",
       "19296        0.0        Highland Park\n",
       "16430        0.0       Swisshelm Park\n",
       "16442        0.0       Swisshelm Park\n",
       "16453        0.0      Stanton Heights\n",
       "...          ...                  ...\n",
       "30601        6.0      Stanton Heights\n",
       "30600        6.0      Crafton Heights\n",
       "30599        6.0          Perry North\n",
       "30595        6.0            Beechview\n",
       "32959        6.0  Squirrel Hill South\n",
       "\n",
       "[39965 rows x 2 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "newTrees = trees.replace(to_replace=['Excellent', 'Very Good', 'Good', 'Fair', 'Poor', 'Critical', 'Dead'], value=[0, 1, 2, 3, 4, 5, 6])\n",
    "newTrees.sort_values(by=\"condition\", inplace=True)\n",
    "new_data = newTrees.iloc[0:, [14, 48]].dropna()\n",
    "new_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>By pivoting the data around the neighborhood, I can see that there are 90 neighborhoods, and I can see a small sample of how many trees some neighborhoods contain"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "condition\n",
       "0.0       79\n",
       "1.0      550\n",
       "2.0    16403\n",
       "3.0    16232\n",
       "4.0     4615\n",
       "5.0      988\n",
       "6.0     1098\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pivot_data = new_data.pivot(columns=\"condition\", values = \"neighborhood\")\n",
    "pivot_data.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>condition</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>neighborhood</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Allegheny Center</th>\n",
       "      <td>861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Allegheny West</th>\n",
       "      <td>368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Allentown</th>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Arlington</th>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Arlington Heights</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Upper Lawrenceville</th>\n",
       "      <td>322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West End</th>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West Oakland</th>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Westwood</th>\n",
       "      <td>248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Windgap</th>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>90 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     condition\n",
       "neighborhood                  \n",
       "Allegheny Center           861\n",
       "Allegheny West             368\n",
       "Allentown                   59\n",
       "Arlington                   81\n",
       "Arlington Heights            4\n",
       "...                        ...\n",
       "Upper Lawrenceville        322\n",
       "West End                   109\n",
       "West Oakland                71\n",
       "Westwood                   248\n",
       "Windgap                    100\n",
       "\n",
       "[90 rows x 1 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighborhoods = new_data.groupby(\"neighborhood\")\n",
    "neighborhoods.count()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>In the data, I saw that some trees were not given a condition like excellent, dead, etc; they were considered NaN. This would not help the data, so I had to drop these trees. I also created a list of the neighborhoods to use later"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "count = 0\n",
    "mean = 0\n",
    "neighborhoodList = []\n",
    "neighborhoodList = new_data[\"neighborhood\"].dropna().unique()\n",
    "neighborhoodDict = dict();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>I then created a list that would contain the neighborhood in each even index, and the next index would contain its overall mean condition. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "fullList = []\n",
    "meanList = []\n",
    "i = 0\n",
    "\n",
    "for n in neighborhoodList:\n",
    "    i = 0\n",
    "    mean = 0\n",
    "    total = 0\n",
    "    fullList.append(n)\n",
    "    indexArray = []\n",
    "    while i < len(new_data):\n",
    "        if new_data['neighborhood'].iloc[i] == n:\n",
    "            indexArray.append(new_data['condition'].iloc[i])\n",
    "            total += 1\n",
    "        i = i + 1\n",
    "    for a in indexArray:\n",
    "        mean = mean + a\n",
    "    mean = mean / total\n",
    "    fullList.append(mean)\n",
    "    meanList.append(mean)\n",
    "meanList.sort()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>I then created a dictionary to hold the neighborhoods and their corresponding mean. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Highland Park': 2.809784592917123, 'Swisshelm Park': 2.6425531914893616, 'Stanton Heights': 2.8945686900958467, 'Brookline': 2.635097493036212, 'Brighton Heights': 2.9203655352480418, 'South Side Flats': 2.509575923392613, 'Banksville': 2.8714285714285714, 'Morningside': 2.8306451612903225, 'Squirrel Hill North': 2.725186766275347, 'Bloomfield': 2.6968670618120236, 'Greenfield': 2.808130081300813, 'Squirrel Hill South': 2.792962356792144, 'Hazelwood': 3.2229038854805725, 'Manchester': 2.9550949913644216, 'Shadyside': 2.9847677075399845, 'Lincoln-Lemington-Belmar': 3.623157894736842, 'Carrick': 2.9074074074074074, 'Central Lawrenceville': 2.6378205128205128, 'Knoxville': 2.8058252427184467, 'Garfield': 2.5790513833992095, 'Point Breeze': 2.8285960378983637, 'Elliott': 2.488372093023256, 'Friendship': 2.360655737704918, 'Central Northside': 2.6726973684210527, 'Lincoln Place': 3.125, 'New Homestead': 2.5977653631284916, 'Duquesne Heights': 2.1728395061728394, 'Spring Hill-City View': 3.0851063829787235, 'Troy Hill': 2.7268041237113403, 'Upper Lawrenceville': 2.220496894409938, 'Lower Lawrenceville': 2.239130434782609, 'Larimer': 2.872340425531915, 'Central Oakland': 3.0027932960893855, 'Marshall-Shadeland': 2.9928909952606637, 'Crafton Heights': 3.207885304659498, 'Beechview': 2.6153846153846154, 'Crawford-Roberts': 2.2672413793103448, 'North Oakland': 2.705639614855571, 'Point Breeze North': 3.144208037825059, 'East Liberty': 2.7970897332255458, 'Central Business District': 2.8789144050104385, 'East Allegheny': 2.3699421965317917, 'Allegheny West': 2.592391304347826, 'Strip District': 2.3948598130841123, 'Mount Washington': 2.5, 'Bon Air': 2.6, 'Allegheny Center': 2.6445993031358883, 'Regent Square': 2.8829268292682926, 'South Side Slopes': 2.943820224719101, 'Westwood': 3.028225806451613, 'Perry South': 3.33, 'Terrace Village': 2.9446640316205532, 'Sheraden': 2.5613382899628254, 'Perry North': 3.147027027027027, 'Polish Hill': 2.485355648535565, 'Homewood West': 2.942857142857143, 'Chartiers City': 2.2222222222222223, 'North Shore': 2.3621495327102804, 'Chateau': 2.700389105058366, 'Overbrook': 3.342857142857143, 'Mt. Oliver': 3.076923076923077, 'Homewood South': 3.1362126245847177, 'Beltzhoover': 3.0277777777777777, 'Upper Hill': 3.40625, 'Bedford Dwellings': 2.730538922155689, 'Allentown': 2.830508474576271, 'Spring Garden': 2.9574468085106385, 'West Oakland': 2.859154929577465, 'Arlington': 3.3703703703703702, 'East Hills': 3.1262135922330097, 'Homewood North': 3.375, 'Bluff': 3.0452261306532664, 'California-Kirkbride': 3.2439024390243905, 'South Oakland': 3.1463414634146343, 'Ridgemont': 3.3333333333333335, 'West End': 2.467889908256881, 'Windgap': 3.12, 'Middle Hill': 2.952, 'Summer Hill': 3.164383561643836, 'Fairywood': 3.888888888888889, 'Northview Heights': 3.8333333333333335, 'Oakwood': 3.0, 'Fineview': 3.4146341463414633, 'St. Clair': 3.3333333333333335, 'East Carnegie': 3.25, 'Esplen': 4.0, 'South Shore': 3.0, 'Arlington Heights': 4.25, 'Glen Hazel': 5.0, 'Hays': 6.0}\n"
     ]
    }
   ],
   "source": [
    "x = 0\n",
    "y = 1\n",
    "\n",
    "while (x<(len(fullList)-1)):\n",
    "    neighborhoodDict[fullList[x]] = fullList[y]\n",
    "    #sorted_dict[fullList[x]] = fullList[y]\n",
    "    x+=2\n",
    "    y+=2\n",
    "print(neighborhoodDict)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>Reading through this dictionary would give me the data needed to determine the best neighborhood in Pittsburgh; however, I plotted the neighborhoods on the graph to get a better visual of the neighborhoods and their conditions. The best neighborhoods have the smallest bars. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(*args, **kw)>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(20,7))\n",
    "plt.bar(neighborhoodDict.keys(), neighborhoodDict.values(), align='edge', width=0.5, color = 'blue')\n",
    "plt.xticks(rotation=90)\n",
    "plt.xlabel(\"Neighborhoods\")\n",
    "plt.ylabel(\"Mean condition of Trees\")\n",
    "plt.title(\"Overall trees conditions in Pittsburgh Neighborhoods\")\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>From the bar graph/dictionary we can see that the top 5 neighborhoods are:\n",
    "    <br>1. Duquesne Heights - 2.172\n",
    "    <br>2. Upper Lawrenceville - 2.22\n",
    "    <br>3. Chartiers City - 2.222\n",
    "    <br>4. Lower Lawrenceville - 2.239\n",
    "    <br>5. Crawford-Roberts - 2.267"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<b>From this data, we can conclude that the best neighborhood is Duquesne Heights and the worst neighborhood is Hays. Since I have not personally been to these neighborhoods, I can not fully say that this is the best and worst neighborhood. I also understand that this analysis only measures one metric, so the true best neighborhood may not even be in the top 5 here. In order to find the true best neighborhood, one must measure a lot more metrics. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
